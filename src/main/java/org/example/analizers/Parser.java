package org.example.analizers;

import java.util.*;

public class Parser {
    static String[] tokens = {"lemonade", "ID", "{", "}", ";", "(", ")", "number", "=", "while", "if", "else", "<", ">", "==", "<=", ">=", "!=", "+", "-", "*", "/", "NUM", "$"};
    static String[] nonTerminals = {"<P>", "<BS>", "<US>", "<UD>", "<ASIG>", "<WHILE>", "<COND>", "<IF>", "<OP_REL>", "<Tipo>", "<E>", "<T>", "<F>"};
    static String[][] actionTable = {
            /*0*/ {"d2", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*1*/ {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "acep"},
            /*2*/ {" ", "d4", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*3*/ {" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*4*/ {" ", " ", "d5", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*5*/ {" ", "d13", " ", " ", " ", " ", " ", "d16", " ", "d14", "d15", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*6*/ {" ", " ", " ", "d17", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*7*/ {" ", "d13", " ", "r3", " ", " ", " ", "d16", " ", "d14", "d15", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*8*/ {" ", "r4", " ", "r4", " ", " ", " ", "r4", " ", "r4", "r4", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*9*/ {" ", "r5", " ", "r5", " ", " ", " ", "r5", " ", "r5", "r5", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*10*/{" ", "r6", " ", "r6", " ", " ", " ", "r6", " ", "r6", "r6", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*11*/{" ", "r7", " ", "r7", " ", " ", " ", "r7", " ", "r7", "r7", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*12*/{" ", "d13", " ", " ", " ", " ", " ", " ", "d19", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*13*/{" ", " ", " ", " ", " ", " ", " ", " ", "d20", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*14*/{" ", " ", " ", " ", " ", "d21", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*15*/{" ", " ", " ", " ", " ", "d22", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*16*/{" ", "r9", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*17*/{" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "r1"},
            /*18*/{" ", " ", " ", "r2", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*19*/{" ", "r8", " ", "r8", " ", " ", " ", "r8", " ", "r8", "r8", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*20*/{" ", "d27", " ", " ", " ", "d26", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "d28", " "},
            /*21*/{" ", "d30", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*22*/{" ", "d30", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*23*/{" ", " ", " ", " ", "d32", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "d33", "d34", " ", " ", " ", " "},
            /*24*/{" ", " ", " ", " ", "r23", " ", "r23", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "r23", "r23", "d35", "d36", " ", " "},
            /*25*/{" ", " ", " ", " ", "r26", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "r26", "r26", "r26", "r26", " ", " "},
            /*26*/{" ", "d27", " ", " ", " ", "d26", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "d28", " "},
            /*27*/{" ", " ", " ", " ", "r28", " ", "r28", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "r28", "r28", "r28", "r28", " "},
            /*28*/{" ", " ", " ", " ", "r29", " ", "r29", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "r29", "r29", "r29", "r29", " ", " "},
            /*29*/{" ", " ", " ", " ", " ", " ", "d38", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*30*/{" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "d40", "d41", "d42", "d43", "d44", "d45", " ", " ", " ", " ", " ", " "},
            /*31*/{" ", " ", " ", " ", " ", " ", "d46", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*32*/{" ", "r10", " ", "r10", " ", " ", " ", "r10", " ", "r10", "r10", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*33*/{" ", "d27", " ", " ", " ", "d26", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "d28", " "},
            /*34*/{" ", "d27", " ", " ", " ", "d26", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "d28", " "},
            /*35*/{" ", "d27", " ", " ", " ", "d26", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "d28", " "},
            /*36*/{" ", "d27", " ", " ", " ", "d26", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "d28", " "},
            /*37*/{" ", " ", " ", " ", " ", " ", "d51", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "d33", "d34", " ", " ", " ", " "},
            /*38*/{" ", " ", "d52", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*39*/{" ", "d53", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*40*/{" ", "r15", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*41*/{" ", "r16", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*42*/{" ", "r17", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*43*/{" ", "r18", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*44*/{" ", "r19", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*45*/{" ", "r20", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*46*/{" ", " ", "d54", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*47*/{" ", " ", " ", " ", "r21", " ", "r21", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "r21", "r21", "d35", "d36", " ", " "},
            /*48*/{" ", " ", " ", " ", "r22", " ", "r22", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "r22", "r22", "d35", "d36", " ", " "},
            /*49*/{" ", " ", " ", " ", "r24", " ", "r24", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "r24", "r24", "r24", "r24", " ", " "},
            /*50*/{" ", " ", " ", " ", "r25", " ", "r25", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "r25", "r25", "r25", "r25", " ", " "},
            /*51*/{" ", " ", " ", " ", "r27", " ", "r27", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "r27", "r27", "r27", "r27", " ", " "},
            /*52*/{" ", "d13", " ", " ", " ", " ", " ", "d16", " ", "d14", "d15", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*53*/{" ", " ", " ", " ", " ", " ", "r14", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*54*/{" ", "d13", " ", " ", " ", " ", " ", "d16", " ", "d14", "d15", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*55*/{" ", " ", " ", "d57", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*56*/{" ", " ", " ", "d58", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*57*/{" ", "r11", " ", "r11", " ", " ", " ", "r11", " ", "r11", "r11", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*58*/{" ", "r12", " ", "r12", " ", " ", " ", "r12", " ", "r12", "r12", "d59", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*59*/{" ", " ", "d60", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*60*/{" ", "d13", " ", " ", " ", " ", " ", "d16", " ", "d14", "d15", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*61*/{" ", " ", " ", "d62", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "},
            /*62*/{" ", "r13", " ", "r13", " ", " ", " ", "r13", " ", "r13", "r13", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "}};
    static String[][] gotoTable = {
            /*0*/     {"1"," "," "," "," "," "," "," "," "," "," "," "," "},
            /*1*/     {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*2*/     {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*3*/     {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*4*/     {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*5*/     {" ","6","7","8","9","10"," ","11"," ","12"," "," "," "},
            /*6*/     {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*7*/     {" ","18","7","8","9","10"," ","11"," ","12"," "," "," "},
            /*8*/     {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*9*/     {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*10*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*11*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*12*/    {" "," "," "," ","19" ," "," "," "," "," "," "," "},
            /*13*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*14*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*15*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*16*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*17*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*18*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*19*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*20*/    {" "," "," "," "," "," "," "," "," "," ","23","24","25"},
            /*21*/    {" "," "," "," "," "," ","29"," "," "," ", " "," "," "},
            /*22*/    {" "," "," "," "," "," ","31"," "," "," ", " "," "," "},
            /*23*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*24*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*25*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*26*/    {" "," "," "," "," "," "," "," "," "," ","37","24","25"},
            /*27*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*28*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*29*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*30*/    {" "," "," "," "," "," "," "," ","39", " "," "," "," "},
            /*31*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*32*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*33*/    {" "," "," "," "," "," "," "," "," "," "," ","47","25"},
            /*34*/    {" "," "," "," "," "," "," "," "," "," "," ","48","25"},
            /*35*/    {" "," "," "," "," "," "," "," "," "," "," "," ","49"},
            /*36*/    {" "," "," "," "," "," "," "," "," "," "," "," ","50"},
            /*37*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*38*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*39*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*40*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*41*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*42*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*43*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*44*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*45*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*46*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*47*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*48*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*49*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*50*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*51*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*52*/    {" ","55","7","8","9","10"," ","11"," ","12"," "," "," "},
            /*53*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*54*/    {" ","55","7","8","9","10"," ","11"," ","12"," "," "," "},
            /*55*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*56*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*57*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*58*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*59*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*60*/    {" ","61","7","8","9","10"," ","11"," ","12"," "," "," "},
            /*60*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "},
            /*60*/    {" "," "," "," "," "," "," "," "," "," "," "," "," "}};
    static String[] productions = {
            /*0)*/"<P’> | <P>$",
            /*1)*/"<P> | lemonade ID { <BS> }",
            /*2)*/"<BS> | <US> <BS>",
            /*3)*/"<BS> | <US>",
            /*4)*/"<US> | <UD>",
            /*5)*/"<US> | <ASIG>",
            /*6)*/"<US> | <WHILE>",
            /*7)*/"<US> | <IF>",
            /*8)*/"<UD> | <Tipo> <ASIG>",
            /*9)*/"<Tipo> | number",
            /*10*/"<ASIG> | ID = <E> ;",
            /*11*/"<WHILE> | while ( <COND> ) { <BS> }",
            /*12*/"<IF> | if ( <COND> ) { <BS> }",
            /*13*/"<IF> | if ( <COND> ) { <BS> } else { <BS> }",
            /*14*/"<COND> | ID <OP_REL> ID",
            /*15*/"<OP_REL> | <",
            /*16*/"<OP_REL> | >",
            /*17*/"<OP_REL> | ==",
            /*18*/"<OP_REL> | <=",
            /*19*/"<OP_REL> | >=",
            /*20*/"<OP_REL> | !=",
            /*21*/"<E> | <E> + <T>",
            /*22*/"<E> | <E> - <T>",
            /*23*/"<E> | <T>",
            /*24*/"<T> | <T> * <F>",
            /*25*/"<T> | <T> / <F>",
            /*26*/"<T> | <F>",
            /*27*/"<F> | (<E>)",
            /*28*/"<F> | ID",
            /*29*/"<F> | NUM",
    };

    private String getAction(int state, String token) {
        int tokenIndex = Arrays.asList(tokens).indexOf(token);
        if (tokenIndex != -1 && state < actionTable.length && tokenIndex < actionTable[state].length) {
            return actionTable[state][tokenIndex];
        } else {
            throw new RuntimeException("Error de sintaxis en el token " + token);
        }
    }

    static String[] tokensInput;
    /* public static void main(String[] args) {
        // Muestra la tabla de acciones
        System.out.println("Tabla de acciones:");
        System.out.println("Estado\t" + String.join("\t", tokens));
        for (int i = 0; i < actionTable.length; i++) {
            System.out.print("Estado " + i + "\t");
            System.out.println(String.join("\t", actionTable[i]));
        }

        // Muestra la tabla de estados a donde ir
        System.out.println("\nTabla de estados a donde ir:");
        System.out.println("Estado\t" + String.join("\t", nonTerminals));
        for (int i = 0; i < gotoTable.length; i++) {
            System.out.print("Estado " + i + "\t");
            System.out.println(Arrays.toString(gotoTable[i]).replaceAll("[\\[\\],]", ""));
        }
    } */

    Parser(String[] input) {
        tokensInput = input;
        // System.out.println(tokensInput[1]);
    }

    public void analizer() {
        //System.out.println("Analizador sintáctico");
        Stack<Integer> stateStack = new Stack<>();
        Stack<String> symbolStack = new Stack<>();

        stateStack.push(0);
        // symbolStack.push(tokensInput[0]);

        int tokenIndex = 0;

        while (true) {
            Integer currentState = stateStack.peek();
            String currentToken = tokensInput[tokenIndex];

            String action = getAction(currentState, currentToken);
            System.out.println(action);



            if (action.startsWith("d")) {
                // desplazar
                Integer nextState = Integer.parseInt(action.substring(1));
                stateStack.push(nextState);
                symbolStack.push(currentToken);
                tokenIndex++;

            } else if (action.startsWith("r")) {
                // reducir
                String production = productions[Integer.parseInt(action.substring(1))];
                // System.out.println(production);
                String[] parts = production.split("\\|");
                // System.out.println(Arrays.toString(parts));

                String left = parts[0].trim();
                String right = parts[1].trim();

                int count = right.split(" ").length;

                for (int i = 0; i < count; i++) {
                    stateStack.pop();
                    symbolStack.pop();
                }
                symbolStack.push(left);
                currentToken = symbolStack.peek();
                currentState = stateStack.peek();
                // System.out.println(Arrays.asList(nonTerminals).indexOf(left));
                // System.out.println(currentState);
                // System.out.println(Arrays.asList(nonTerminals).indexOf(left));
                // System.out.println(Integer.valueOf(gotoTable[currentState][Arrays.asList(nonTerminals).indexOf(left)]) );
                stateStack.push(Integer.valueOf(gotoTable[currentState][Arrays.asList(nonTerminals).indexOf(left)]) );
                currentState = stateStack.peek();
                // symbolStack.push(left);
                // break;
            } else if (action.equals("acep")) {
                // aceptar
                System.out.println("Si pasamos de ciclo");
                break;
            } else {
                // error
                throw new RuntimeException("Acción desconocida: " + action);
            }
            System.out.println(currentState + " " + currentToken);
        }
    }

}
